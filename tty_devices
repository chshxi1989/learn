1、串口设备/dev/ttyAMA3
2、用stty命令配置串口，stty配置不准，有写参数没有配置，如流控、奇偶校验等
    stty -F /dev/ttyAMA3 ispeed 230400 ospeed 230400 cs8
    stty -F /dev/ttyAMA3 speed 230400 cs8
    stty -F /dev/ttyAMA7 ispeed 460800 ospeed 460800 cs8 -parenb -cstopb  -echo

3、往串口设备写数据，方便硬件量设备信号，是否有波形
    echo FE55FE55FE55FE55FE55FE55FE55FE55FE55 >/dev/ttyAMA3
4、从串口设备读数据
    od -t x1 /dev/ttyAMA3
5、查看串口收发情况
~ # cat /proc/tty/driver/ttyAMA
serinfo:1.0 driver revision:
0: uart:PL011 rev2 mmio:0x12100000 irq:13 tx:33841 rx:0 RTS|DTR|DSR|CD|RI

起始位：起始位必须是持续一个比特时间的逻辑0电平，标志传输一个字符的开始，接收方可用起始位使自己的接收时钟-电子发烧友网与发送方的数据同步。
数据位：数据位紧跟在起始位之后，是通信中的真正有效字母0开头的电子元器件_【华秋商城】电子元器件查询平台。数据位的位数可以由通信双方共同约定。传输数据时先传送字符的低位，后传送字符的高位。
奇偶校验位：奇偶校验位仅占一位，用于进行奇校验或偶校验，奇偶检验位不是必须有的。如果是奇校验，需要保证传输的数据总共有奇数个逻辑高位；如果是偶校验，需要保证传输的数据总共有偶数个逻辑高位。
停止位：停止位可以是是1位、1.5位或2位，可以由软件设定。它一定是逻辑1电平，标志着传输一个字符的结束。
空闲位：空闲位是指从一个字符的停止位结束到下一个字符的起始位开始，表示线路处于空闲状态，必须由高电平来填充。
没有数据传输的时候，是空闲位，即高电平。

电信号：
10101010101
发送的字符是U，对应ascii是01010101，电路上的bit位是先发前导码0，再发数据1,0,1,0,1,0,1,0，最后再发空闲常高。
先发低bit位，再发高bit位。

tty驱动中VMIN和VTIME的含义：
http://unixwiz.net/techtips/termios-vmin-vtime.html#:~:text=VMIN%20is%20a%20character%20count%20ranging%20from%200,this%20suggests%20four%20combinations%20that%20we%27ll%20discuss%20below.
VMIN is a character count ranging from 0 to 255 characters, and VTIME is time measured in 0.1 second intervals, 
(0 to 25.5 seconds). The value of "zero" is special to both of these parameters, and this suggests four combinations 
that we'll discuss below. In every case, the question is when a read() system call is satisfied, and this is our
prototype call:int n = read(fd, buffer, nbytes);
VMIN = 0 and VTIME = 0
This is a completely non-blocking read - the call is satisfied immediately directly from the driver's input queue. 
If data are available, it's transferred to the caller's buffer up to nbytes and returned. Otherwise zero is 
immediately returned to indicate "no data". We'll note that this is "polling" of the serial port, and it's almost 
always a bad idea. If done repeatedly, it can consume enormous amounts of processor time and is highly inefficient. 
Don't use this mode unless you really, really know what you're doing.
VMIN = 0 and VTIME > 0
This is a pure timed read. If data are available in the input queue, it's transferred to the caller's buffer up to 
a maximum of nbytes, and returned immediately to the caller. Otherwise the driver blocks until data arrives, 
or when VTIME tenths expire from the start of the call. If the timer expires without data, zero is returned. 
A single byte is sufficient to satisfy this read call, but if more is available in the input queue, it's returned to 
the caller. Note that this is an overall timer, not an intercharacter one.
VMIN > 0 and VTIME > 0
A read() is satisfied when either VMIN characters have been transferred to the caller's buffer, or when VTIME tenths 
expire between characters. Since this timer is not started until the first character arrives, this call can block 
indefinitely if the serial line is idle. This is the most common mode of operation, and we consider VTIME to be 
an intercharacter timeout, not an overall one. This call should never return zero bytes read.
VMIN > 0 and VTIME = 0
This is a counted read that is satisfied only when at least VMIN characters have been transferred to the caller's buffer
- there is no timing component involved. This read can be satisfied from the driver's input queue (where the call 
could return immediately), or by waiting for new data to arrive: in this respect the call could block indefinitely.
We believe that it's undefined behavior if nbytes is less then VMIN.



